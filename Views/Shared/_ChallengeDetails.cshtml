@model BookWyrm.ViewModels.ChallengeDetailsViewModel
@if (Model.Challenge.Icon == null)
{
    <img src="~/Content/default-book.svg" class="challenge-icon" />
}
else
{
    <img src="@Model.Challenge.Icon" class="challenge-icon" />
}
<h2>@Model.Challenge.Name</h2>
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm(FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Id", @Model.Challenge.Id)
        @Html.Hidden("Return", @Model.Location)
        if (Model.IsCurrentChallenge)
        {
            <input type="submit" value="Finish" formaction="/profile"/>
        }
        else if (Model.Challenge.Users.Any())
        {
            <input type="submit" value="Completed" disabled />
        }
        else
        {
            <input type="submit" value="Start Challenge" formaction="/challenge"/>
        }

        if(ViewBag.Role == "Admin" || ViewBag.Role == "Creator")
        {
            <input type="submit" value="Delete" onclick="confirmDelete(event)" formaction="/deletechallenge"/>
        }
    }
}

<div class="challenge-description">
    @Model.Challenge.Description
</div>
<div>

</div>
@if (!Request.IsAuthenticated)
{
    <div>
        @Html.ActionLink("Log In", "Index", "Login") or @Html.ActionLink("Register", "Index", "Register") to start challenge
    </div>
}
    <div>
        @foreach (var book in Model.Challenge.Books)
        {
            if (Request.IsAuthenticated && !Model.Challenge.Users.Any() && Model.IsCurrentChallenge)
            {
                if (book.Book.Users.Count == 1)
                {
                    <div>
                        <input id="read-@book.BookId" type="submit" value="Read" onclick="markAsRead(@book.BookId, '@Environment.GetEnvironmentVariable("URL")', true)" class="disabled" />
                    </div>
                }
                else
                {
                    <div>
                        <input id="read-@book.BookId" type="submit" value="Read" onclick="markAsRead(@book.BookId, '@Environment.GetEnvironmentVariable("URL")', false)" />
                    </div>
                }
            }
            <div>
                @book.Order
            </div>
            <div id="content-@book.BookId" class="book-content">
                <h4 class="book-title to-be-striked 
                     @if(Request.IsAuthenticated && ((book.Book.Users.Count == 1 && Model.IsCurrentChallenge) || Model.Challenge.Users.Any()))
                     {
                         <text>strike-through</text>
                     }
                     " >@book.Book.Title</h4>
                <div  class="book-authors to-be-striked 
                     @if(Request.IsAuthenticated && ((book.Book.Users.Count == 1 && Model.IsCurrentChallenge) || Model.Challenge.Users.Any()))
                     {
                         <text>strike-through</text>
                     }
                     " >
                    by
                    @foreach (var author in @book.Book.Authors)
                    {
                        @author.Author.FirstName <text> </text> @author.Author.LastName

                        if (author != @book.Book.Authors.Last())
                        {
                            <text> & </text>
                        }
                    }
                </div>
                <div class="book-description">
                    @book.Book.Description
                </div>
            </div>
        }
    </div>

<script src="~/Scripts/MarkAsRead.js"></script>
<script src="~/Scripts/DeleteConfirm.js"></script>